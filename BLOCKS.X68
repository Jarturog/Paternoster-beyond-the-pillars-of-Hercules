*-----------------------------------------------------------
*BLOCKS
*-----------------------------------------------------------

MAPPLOT
		MOVEM.L D0-D7, -(A7)
		MOVEM.L A0-A6, -(A7)
	       MOVE.W LOADEDMAP, D1
	       MULU #12, D1
	       MOVEA.W D1, A1
	       JMP MAPSEL(A1)
MAPSEL:
		   JMP ELEVATORPLOT
		   JMP NEXT
		   LEA HEAVEN_0, A0
		   JMP NEXT
		   LEA HEAVEN_1, A0
		   JMP NEXT
		   LEA HEAVEN_END, A0
		   JMP NEXT
		   LEA HEAVEN_ROOM, A0
		   JMP NEXT
		   LEA HELL_0, A0
		   JMP NEXT
		   LEA HELL_1, A0
		   JMP NEXT
	       LEA HELL_END, A0
	       JMP NEXT
	       LEA HELL_ROOM, A0
	       JMP NEXT
MAPUPD
			
			MOVE.W D0, -(A7)
			MOVE.W LOADEDMAP, D0
			CMP #1, D0
			BEQ MAPA1
			CMP #2, D0
			BEQ MAPA2
			CMP #3, D0
			BEQ MAPA3
			CMP #4, D0
			BEQ MAPA4
			CMP #5, D0
			BEQ MAPA5
			CMP #6, D0
			BEQ MAPA6
			CMP #7, D0
			BEQ MAPA7
			CMP #8, D0
			BEQ MAPA8
			MOVE.W (A7)+, D0
			RTS

	
			
NEXT
		   CLR.L D1
           MOVE.B (A0)+,D1
           MULU #6, D1
           MOVEA.L D1, A1
           JMP JMPLIST(A1)
           
JMPLIST: 
			JMP NEWLINE ; 0 = END OF ROW
			JMP DGHE    ; 1 = DRAW GRASS HEAVEN 
			JMP DBHL    ; 2 = DRAW BRICK HELL
			JMP DBHV    ; 3 = DRAW BRICK HEAVEN
			JMP DGHL    ; 4 = DRAW GRASS HELL
			JMP DF1HV   ; 5 = DRAW FLOOR 1 HEAVEN
			JMP DF1HL   ; 6 = DRAW FLOOR 1 HELL
			JMP DF2HV   ; 7 = DRAW FLOOR 2 HEAVEN
			JMP DDHL	; 8 = DRAW DOOR HELL
			JMP DDHV	; 9 = DRAW DOOR HEAVEN
			JMP DF2HL   ; 10 = DRAW FLOOR 2 HELL
			JMP ENDMAP  ; 11 = END OF THE MAP
			
DDHL
	MOVE.L #$00111111, -(A7)
	MOVE.L #$00111111, -(A7)
	JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6    
	JSR ENDBLOCK
	JMP NEXT
DDHV
	MOVE.L #$00FFFFFF, -(A7)
	MOVE.L #$00FFFFFF, -(A7)
	JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6
	JSR ENDBLOCK
	JMP NEXT
DGHE ;DRAW-GRASS-HEAVEN vvvR
	MOVE.L #$0099FF99, -(A7)
	MOVE.L #$0099FF99, -(A7)
	JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6
	; SET PEN COLOR 
	MOVE.B #80, D0
	MOVE.L #$0000CC00, D1
	TRAP #15
	;DRAW LINES   
	MOVE.B #84, D0 
	;LINEA 11 
	MOVE.W BPOSX1,D1
	ADD.W #6, D1
	MOVE.W BPOSY1, D2
	ADD.W #5, D2
	MOVE.W BPOSX1, D3
	ADD.W #9, D3
	MOVE.W BPOSY1, D4
	ADD.W #10, D4
	TRAP #15
	;LINEA 12
	ADD.W #8, D1	
	ADD.W #8, D3
	TRAP #15
	;LINEA 13
	ADD.W #8, D1	
	ADD.W #8, D3
	TRAP #15
	;LINEA 21
	MOVE.W BPOSX1,D1
	ADD.W #6, D1
	MOVE.W BPOSY1, D2
	ADD.W #20, D2
	MOVE.W BPOSX1, D3
	ADD.W #9, D3
	MOVE.W BPOSY1, D4
	ADD.W #25, D4
	TRAP #15
	;LINEA 22
	ADD.W #8, D1	
	ADD.W #8, D3
	TRAP #15
	;LINEA 23
	ADD.W #8, D1	
	ADD.W #8, D3
	TRAP #15
	JSR ENDBLOCK
	JMP NEXT
DBHL ;DRAW BRICK-HELL vvvR
	
	MOVE.L #$00010101, -(A7)
	MOVE.L #$00666666, -(A7)
	JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6
	;DRAW HORIZONTAL LINE
	MOVE.B #84, D0 
	MOVE.W BPOSX1, D1
	MOVE.W BPOSY1, D2
	ADD.W #16, D2
	MOVE.W BPOSX1, D3
	ADD.W #32, D3
	MOVE.W BPOSY1, D4
	ADD.W #16, D4
	TRAP #15
	;DRAW VERTICAL LINE 
	MOVE.W BPOSX1, D1
	ADD.W #16, D1
	MOVE.W BPOSY1, D2
	ADD.W #16, D2
	MOVE.W BPOSX1, D3
	ADD.W #16, D3
	MOVE.W BPOSY1, D4
	ADD.W #32, D4
	TRAP #15
	JSR ENDBLOCK	
	JMP NEXT
DBHV ;DRAW BRICK-HEAVEN vvvR
	
	MOVE.L #$00CCCCCC, -(A7)
	MOVE.L #$00D7EBFA, -(A7)
    JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6
	;DRAW HORIZONTAL LINE
	MOVE.B #84, D0 
	MOVE.W BPOSX1, D1
	MOVE.W BPOSY1, D2
	ADD.W #16, D2
	MOVE.W BPOSX1, D3
	ADD.W #32, D3
	MOVE.W BPOSY1, D4
	ADD.W #16, D4
	TRAP #15
	;DRAW VERTICAL LINE 
	MOVE.W BPOSX1, D1
	ADD.W #16, D1
	MOVE.W BPOSY1, D2
	ADD.W #16, D2
	MOVE.W BPOSX1, D3
	ADD.W #16, D3
	MOVE.W BPOSY1, D4
	ADD.W #32, D4
	TRAP #15 
	JSR ENDBLOCK
	JMP NEXT
DGHL ;DRAW GRASS HELL vvvR

	MOVE.L #$002255EE, -(A7)
	MOVE.L #$002255EE, -(A7)
	JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6
	; SET PEN COLOR 
	MOVE.B #80, D0
	MOVE.L #$000000CC, D1
	TRAP #15
	;DRAW LINES   
	MOVE.B #84, D0 
	;LINEA 11 
	MOVE.W BPOSX1,D1
	ADD.W #6, D1
	MOVE.W BPOSY1, D2
	ADD.W #5, D2
	MOVE.W BPOSX1, D3
	ADD.W #9, D3
	MOVE.W BPOSY1, D4
	ADD.W #10, D4
	TRAP #15
	;LINEA 12
	ADD.W #8, D1	
	ADD.W #8, D3
	TRAP #15
	;LINEA 13
	ADD.W #8, D1	
	ADD.W #8, D3
	TRAP #15
	;LINEA 21
	MOVE.W BPOSX1,D1
	ADD.W #6, D1
	MOVE.W BPOSY1, D2
	ADD.W #20, D2
	MOVE.W BPOSX1, D3
	ADD.W #9, D3
	MOVE.W BPOSY1, D4
	ADD.W #25, D4
	TRAP #15
	;LINEA 22
	ADD.W #8, D1	
	ADD.W #8, D3
	TRAP #15
	;LINEA 23
	ADD.W #8, D1	
	ADD.W #8, D3
	TRAP #15
	JSR ENDBLOCK
	JMP NEXT

DF1HV ; DRAW FLOOR_1 HEAVEN vvvR
	MOVE.L #$00CCCCCC, -(A7)
	MOVE.L #$00C6DAE9, -(A7)
    JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6
	JSR ENDBLOCK
	JMP NEXT
DF1HL ; DRAW FLOOR_1 HELL vvvR 
	MOVE.L #$00010101, -(A7)
	MOVE.L #$00777777, -(A7)
	JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6

	JSR ENDBLOCK
	JMP NEXT
	
DF2HV ;DRAW FLOOR_2 HEAVEN vvvR
	MOVE.L #$00CCCCCC, -(A7)
	MOVE.L #$00C6DAE9, -(A7)
    JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6
	;SET NEW FILL COLOR  
	MOVE.B #81, D0
	MOVE.L #$00D7EBFA, D1
	TRAP #15 
	;DRAW INSIDE SQUARE 
	MOVE.B #87, D0
	MOVE.W BPOSX1, D1
	ADD.W #8, D1
	MOVE.W BPOSY1, D2
	ADD.W #8, D2
	MOVE.W BPOSX2, D3
	SUB.W #8, D3
	MOVE.W BPOSY2, D4
	SUB.W #8, D4
	TRAP #15
	JSR ENDBLOCK
	JMP NEXT
DF2HL ; DRAW FLOOR_2 HELL vvvR
	MOVE.L #$00010101, -(A7)
	MOVE.L #$00777777, -(A7)
	JSR DRAWBLOCK
	MOVE.L (A7)+, D6 ;RETURN SP TO ORIGINAL STATE
	MOVE.L (A7)+, D6
	;SET NEW FILL COLOR  
	MOVE.B #81, D0
	MOVE.L #$00666666, D1
	TRAP #15 
;DRAW INSIDE SQUARE 
	MOVE.B #87, D0
	MOVE.W BPOSX1, D1
	ADD.W #8, D1
	MOVE.W BPOSY1, D2
	ADD.W #8, D2
	MOVE.W BPOSX2, D3
	SUB.W #8, D3
	MOVE.W BPOSY2, D4
	SUB.W #8, D4
	TRAP #15
	JSR ENDBLOCK
	JMP NEXT	
    
DRAWBLOCK 
;SE TIENE QUE PONER EN LA PILA EL PEN COLOR PRIMERO Y EL FILL COLOR DESPUÉS COMO LONGS. 
	
	;SET FILL COLOR  
	MOVE.B #81, D0
	MOVE.L 4(A7), D1
	TRAP #15 
	
	; SET PEN COLOR 
	MOVE.B #80, D0
	MOVE.L 8(A7), D1
	TRAP #15 

	;DRAW BLOCK 
	MOVE.B #87, D0
	MOVE.W BPOSX1, D1
	MOVE.W BPOSY1, D2
	MOVE.W BPOSX2, D3
	MOVE.W BPOSY2, D4
	TRAP #15
	RTS

NEWLINE
	;RESET X POSITION
	MOVE.W #0, BPOSX1
	MOVE.W #32, BPOSX2
	;ADD 33 TO Y POSITION
	ADD.W #32, BPOSY1
	ADD.W #32, BPOSY2
	JMP NEXT
   
ENDBLOCK
	;SET NEW BLOCK POSITION
	ADD.W #32, BPOSX1
	ADD.W #32, BPOSX2
	RTS
ENDMAP
	;SET DEFAULT BLOCK POSITION
	MOVE.W #0, BPOSX1
	MOVE.W #0, BPOSY1
	MOVE.W #32, BPOSX2
	MOVE.W #32, BPOSY2
	MOVEM.L (A7)+, A0-A6
	MOVEM.L (A7)+, D0-D7
	RTS
	


MAPA1
	MOVE.W (A7)+, D0
	MOVEM.W D0-D4, -(A7)
	MOVE.W PLAYERPOSX, D0
	MOVE.W PLAYERPOSY, D1
	;GO TO THE NEXT ROOM DOOR
	;FIRST LETS CHECH POS X
	CMP #352, D0  ; BGT = 352 > D0
	BGT MAP1NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #288, D0
	BLT MAP1NODOOR
	;NOW WE CHECK POS Y 
	CMP #480, D1  ; 
	BGT MAP1NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #448, D1
	BLT MAP1NODOOR
	MOVE.W #32, PLAYERPOSY
	MOVE.W #2, LOADEDMAP
MAP1NODOOR
	MOVEM.W (A7)+, D0-D4
	RTS
	
MAPA2
	MOVE.W (A7)+, D0
	MOVEM.W D0-D4, -(A7)
	MOVE.W PLAYERPOSX, D0
	MOVE.W PLAYERPOSY, D1
	;GO TO THE NEXT ROOM DOOR
	;FIRST LETS CHECK POS X
	CMP #352, D0  ; BGT = 352 > D0
	BGT MAP2NODOOR1    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #288, D0
	BLT MAP2NODOOR1
	;NOW WE CHECK POS Y 
	CMP #480, D1  ; 
	BGT MAP2NODOOR1    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #448, D1
	BLT MAP2NODOOR1
	MOVE.W #32, PLAYERPOSY
	MOVE.W #3, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS
MAP2NODOOR1
	;GO TO THE PREVIOUS ROOM DOOR
	;FIRST LETS CHECK POS X
	CMP #352, D0  ; BGT = 352 > D0
	BGT MAP2NODOOR2    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #288, D0
	BLT MAP2NODOOR2
	;NOW WE CHECK POS Y 
	CMP #32, D1  ; 
	BGT MAP2NODOOR2    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #0, D1
	BLT MAP2NODOOR2
	MOVE.W  #416, PLAYERPOSY
	MOVE.W #1, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS

MAP2NODOOR2
	;GO TO THE LEFT HEAVEN'S ROOM
	CMP #160, D0  ; BGT = 352 > D0
	BGT MAP2NODOOR3    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #128, D0
	BLT MAP2NODOOR3
	;NOW WE CHECK POS Y 
	CMP #170, D1  ; 
	BGT MAP2NODOOR3    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #120, D1
	BLT MAP2NODOOR3
	MOVE.W #$130, PLAYERPOSX
	MOVE.W #$0B0, PLAYERPOSY
	MOVE.W #4, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS
MAP2NODOOR3
	;GO TO THE RIGHT HEAVEN'S ROOM
	CMP #480, D0  ; BGT = 352 > D0
	BGT MAP2NODOOR4    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #448, D0
	BLT MAP2NODOOR4
	;NOW WE CHECK POS Y 
	CMP #170, D1  ; 
	BGT MAP2NODOOR4    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #120, D1
	BLT MAP2NODOOR4
	MOVE.W #$130, PLAYERPOSX
	MOVE.W #$0B0, PLAYERPOSY
	MOVE.W #4, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS
MAP2NODOOR4
	MOVEM.W (A7)+, D0-D4
	RTS
MAPA3 
	MOVE.W (A7)+, D0
	MOVEM.W D0-D4, -(A7)
	MOVE.W PLAYERPOSX, D0
	MOVE.W PLAYERPOSY, D1
	;GO TO THE PREVIOUS ROOM DOOR
	;FIRST LETS CHECK POS X
	CMP #352, D0  ; BGT = 352 > D0
	BGT MAP3NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #288, D0
	BLT MAP3NODOOR
	;NOW WE CHECK POS Y 
	CMP #32, D1  ; 
	BGT MAP3NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #0, D1
	BLT MAP3NODOOR
	MOVE.W  #416, PLAYERPOSY
	MOVE.W #2, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS
MAP3NODOOR
	MOVEM.W (A7)+, D0-D4
	RTS
MAPA4
	MOVE.W (A7)+, D0
	MOVEM.W D0-D4, -(A7)
	MOVE.W PLAYERPOSX, D0
	MOVE.W PLAYERPOSY, D1
	;GO BACK TO 2ND HEAVEN'S ROOM
	CMP #384, D0  ; BGT = 352 > D0
	BGT MAP4NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #260, D0
	BLT MAP4NODOOR
	;NOW WE CHECK POS Y 
	CMP #128, D1  ; 
	BGT MAP4NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #96, D1
	BLT MAP4NODOOR
	MOVE.W  #224, PLAYERPOSX
	MOVE.W #2, LOADEDMAP
MAP4NODOOR
	MOVEM.W (A7)+, D0-D4
	RTS
;;;;;;;;;;HELL
MAPA5
	MOVE.W (A7)+, D0
	MOVEM.W D0-D4, -(A7)
	MOVE.W PLAYERPOSX, D0
	MOVE.W PLAYERPOSY, D1
	;GO TO THE NEXT ROOM DOOR
	;FIRST LETS CHECH POS X
	CMP #352, D0  ; BGT = 352 > D0
	BGT MAP5NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #288, D0
	BLT MAP5NODOOR
	;NOW WE CHECK POS Y 
	CMP #480, D1  ; 
	BGT MAP5NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #448, D1
	BLT MAP5NODOOR
	MOVE.W #32, PLAYERPOSY
	MOVE.W #6, LOADEDMAP
MAP5NODOOR
	MOVEM.W (A7)+, D0-D4
	RTS
	
MAPA6
	MOVE.W (A7)+, D0
	MOVEM.W D0-D4, -(A7)
	MOVE.W PLAYERPOSX, D0
	MOVE.W PLAYERPOSY, D1
	;GO TO THE NEXT ROOM DOOR
	;FIRST LETS CHECK POS X
	CMP #352, D0  ; BGT = 352 > D0
	BGT MAP6NODOOR1    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #288, D0
	BLT MAP6NODOOR1
	;NOW WE CHECK POS Y 
	CMP #480, D1  ; 
	BGT MAP6NODOOR1    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #448, D1
	BLT MAP6NODOOR1
	MOVE.W #32, PLAYERPOSY
	MOVE.W #7, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS
MAP6NODOOR1
	;GO TO THE PREVIOUS ROOM DOOR
	;FIRST LETS CHECK POS X
	CMP #352, D0  ; BGT = 352 > D0
	BGT MAP6NODOOR2    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #288, D0
	BLT MAP6NODOOR2
	;NOW WE CHECK POS Y 
	CMP #32, D1  ; 
	BGT MAP6NODOOR2    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #0, D1
	BLT MAP6NODOOR2
	MOVE.W  #416, PLAYERPOSY
	MOVE.W #5, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS
MAP6NODOOR2
	;CHECK FOR LEFT HELL ROOM
	CMP #96, D0  ; BGT = 352 > D0
	BGT MAP6NODOOR3    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #64, D0
	BLT MAP6NODOOR3
	;NOW WE CHECK POS Y 
	CMP #384, D1  ; 
	BGT MAP6NODOOR3    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #320, D1
	BLT MAP6NODOOR3
	MOVE.W #$130, PLAYERPOSX
	MOVE.W #$0B0, PLAYERPOSY
	MOVE.W #8, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS
MAP6NODOOR3
	;CHECK FOR THE RIGHT HELL ROOM
	CMP #576, D0  ; BGT = 352 > D0
	BGT MAP6NODOOR4    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #544, D0
	BLT MAP6NODOOR4
	;NOW WE CHECK POS Y 
	CMP #384, D1  ; 
	BGT MAP6NODOOR4    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #320, D1
	BLT MAP6NODOOR4
	MOVE.W #$130, PLAYERPOSX
	MOVE.W #$0B0, PLAYERPOSY
	MOVE.W #8, LOADEDMAP
	MOVEM.W (A7)+, D0-D4
	RTS
MAP6NODOOR4
	MOVEM.W (A7)+, D0-D4
	RTS
MAPA7 
	MOVE.W (A7)+, D0
	MOVEM.W D0-D4, -(A7)
	MOVE.W PLAYERPOSX, D0
	MOVE.W PLAYERPOSY, D1
	;GO BACK TO PREVIOUS HELL'S ROOM
	CMP #384, D0  ; BGT = 352 > D0
	BGT MAP7NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #260, D0
	BLT MAP7NODOOR
	;NOW WE CHECK POS Y 
	CMP #32, D1  ; 
	BGT MAP7NODOOR    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #0, D1
	BLT MAP7NODOOR
	MOVE.W  #224, PLAYERPOSX
	MOVE.W #6, LOADEDMAP
MAP7NODOOR
	MOVEM.W (A7)+, D0-D4
	RTS
MAPA8
	 ;HELLS ROOM
	MOVE.W (A7)+, D0
	MOVEM.W D0-D4, -(A7)
	MOVE.W PLAYERPOSX, D0
	MOVE.W PLAYERPOSY, D1
	;GO BACK TO PREVIOUS HELL'S ROOM
	CMP #384, D0  ; BGT = 352 > D0
	BGT MAP8NODOOR1    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #260, D0
	BLT MAP8NODOOR1
	;NOW WE CHECK POS Y 
	CMP #128, D1  ; 
	BGT MAP8NODOOR1    ;IT'S NOT INSIDE THE DOOR'S COORDINATES
	CMP #96, D1
	BLT MAP8NODOOR1
	MOVE.W  #224, PLAYERPOSX
	MOVE.W #6, LOADEDMAP
MAP8NODOOR1
	MOVEM.W (A7)+, D0-D4
	RTS









*~Font name~Fixedsys~
*~Font size~9~
*~Tab type~1~
*~Tab size~4~
